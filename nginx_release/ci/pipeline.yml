bosh:
  ca_cert: ((bosh.ca_cert))
  client_secret: ((bosh.client_secret))
  client_user: ((bosh.client))
  deployment: tpoland-nginx
  url: ((bosh.uri))
github:
  branch: master
  repository: https://github.com/tpoland/sw-concourse-training.git
  username: tpoland
jobs:
- name: job-upload-release
  plan:
  - get: source-code
    params:
      depth: 1
    trigger: true
  - config:
      image_resource:
        source:
          repository: starkandwayne/concourse
        type: docker-image
      inputs:
      - name: source-code
      params:
        BOSH_CA_CERT: ((bosh.ca_cert))
        BOSH_CLIENT: ((bosh.client))
        BOSH_CLIENT_SECRET: ((bosh.client_secret))
        BOSH_DEPLOYMENT: tpoland-nginx
        BOSH_ENVIRONMENT: ((bosh.uri))
      platform: linux
      run:
        path: source-code/nginx_release/ci/tasks/upload-release-with-vars.sh
    task: upload-release
  public: true
- name: job-deploy-release
  plan:
  - get: source-code
    params:
      depth: 1
    passed:
    - job-upload-release
    trigger: true
  - config:
      image_resource:
        source:
          repository: starkandwayne/concourse
        type: docker-image
      inputs:
      - name: source-code
      params:
        BOSH_CA_CERT: ((bosh.ca_cert))
        BOSH_CLIENT: ((bosh.client))
        BOSH_CLIENT_SECRET: ((bosh.client_secret))
        BOSH_DEPLOYMENT: tpoland-nginx
        BOSH_ENVIRONMENT: ((bosh.uri))
      platform: linux
      run:
        path: source-code/nginx_release/ci/tasks/deploy-release-with-vars.sh
    task: deploy-release
  public: true
meta:
  name: tpoland-nginx-demo
  pipeline: tpoland-nginx-demo
  target: training
  url: https://pipes.starkandwayne.com
resources:
- name: source-code
  source:
    branch: master
    uri: https://github.com/tpoland/sw-concourse-training.git
  type: git

